module.exports = {
  config: {
    name: "stalk",
    role: 0,
    author: "UPoLüêî",
		guide: {
			en: "{pn} [blank | @tag | reply_message]
		}
  },
  onStart: async function ({ event, message, usersData, api, args }) {
    let uid = args[0]?.match(/^\d+$/) ? args[0] : Object.keys(event.mentions)[0] || event.senderID;
    try {
      const userInfo = await api.getUserInfo(uid);
      const avatarUrl = await usersData.getAvatarUrl(uid);
      const genderText = userInfo[uid]?.gender === 1 
        ? "Female üë©" 
        : userInfo[uid]?.gender === 2 
        ? "Male üë®" 
        : "Gay üåà";
      const userInformation = `
      ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
          üîé ùêîùêíùêÑùêë ùêàùêçùêÖùêé üîç
      ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
      ¬ª ùôΩùöäùöñùöé: ${userInfo[uid]?.name || "Unknown"}
      ¬ª ùô∂ùöéùöóùöçùöéùöõ: ${genderText}
      ¬ª ùöÑùô∏ùô≥: ${uid}
      ¬ª ùô≤ùöïùöäùöúùöú: ${userInfo[uid]?.type?.toUpperCase() || "Normal User"}
      ¬ª ùöÑùöúùöéùöõùöóùöäùöñùöé: ${userInfo[uid]?.vanity || "None"}
      ¬ª ùôøùöõùöòùöèùöíùöïùöé ùöÑùöÅùôª: ${userInfo[uid]?.profileUrl || "None"}
      ¬ª ùô±ùöíùöõùöùùöëùöçùöäùö¢: ${userInfo[uid]?.isBirthday !== false ? userInfo[uid].isBirthday : "Private"}
      ¬ª ùôµùöõùöíùöéùöóùöç ùö†ùöíùöùùöë ùöãùöòùöù: ${userInfo[uid]?.isFriend ? "Yes ‚úÖ" : "No ‚ùå"}
      ¬ª ùôΩùöíùöåùöîùôΩùöäùöñùöé: ${userInfo[uid]?.alternateName || "None"}
      `;
      message.reply({
        body: userInformation.trim(),
        attachment: await global.utils.getStreamFromURL(avatarUrl).catch((err) => {
          console.error("Error loading avatar:", err.message);
        }),
      });
    } catch (error) {
      console.error("Error fetching user data:", error.message);
      message.reply("‚ö†Ô∏è Unable to retrieve user information.");
    }
  },
};
